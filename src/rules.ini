; Mallory Rule Configuration
; Pseudo BNF Below
;
; <valid-ip> ::= IPv4 Address
; <wildcard> ::= "*"
;
; <address> ::= <valid-ip> | <wildcard>
; <port> ::=  0-65536 | <wildcard>
; <direction> ::= "c2s" | "s2c" | <wildcard>
; <payload> ::= "matchingstring" | <wildcard> 
; <action> ::= "Muck" | "Debug" | "Fuzz" | "Nothing"
; <passthru> ::= "True" | "False"
; 
; This is strict. If you put "true" instead of "True" the rule will fail
; 
; [DebugRuleExample]
; addr=<address>
; port=<port>
; direction=<direction>
; payload=<payload>
; passthru=<passthru>
; action=<action>
; 
; [MuckRuleExample]
; address=<address>
; port=<port>
; direction=<direction>
; payload=<payload>
; action=Muck
; muck_1 = s/FOO/bar/gi
; muck_2 = s/gzip//gi
; muck_N = s/(.*)//gi
; 
; Matching Criteria
; --
; Address - Valid IPv4 address. Wildcard for all addresses
; Port - A valid port. Wildcard for all ports.
; Direction - Which direction the rule should be active on. Wildcard for both.
; Payload - String to match in the payload before rule will trigger. Wildcard for all payloads
; Action - The type of action to take (string mangling, debugging, fuzzing, etc.)
; 
; Action Note
; -- 
; Some actions may have additional items that can be specified
; 
;[ClientHTTPDebugger]
;addr=192.168.1.1
;port=80
;direction=c2s
;payload=*
;passthru=True
;action=Debug

;[ClientHTTPMuck]
;port=80
;direction=c2s
;action=Muck
;muck_1=EHH//g
;muck_2=FOO//g
;muck_3=BAZ//g
;[FuzzRuleDefault]
;payload=*
;passthru=True
;action=Fuzz
;direction=s2c

[SimpleMuckTest]
passthru=True
action=Muck
muck_1=A/B/g
;
 [DefaultFixGzip]
 addr=*
 port=*
 direction=c2s
 passthru=True
 action=Muck
 muck_1=gzip,deflate/ /1
 muck_2=deflate/ /1
 muck_3=gzip/ /1

 [DefaultDebug]
 addr=*
 port=*
 direction=*
 passthru=False
 action=Debug